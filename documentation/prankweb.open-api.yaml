openapi: 3.0.2

info:
  title: Prankweb API
  version: 1.1.0

servers:
  - url: https://prankweb.cz/api/v2/

paths:
  /prediction/{database}/{prediction_task_id}:
    get:
      parameters:
        - in: path
          name: database
          required: true
          schema:
            $ref: '#/components/schemas/DatabaseId'
        - in: path
          name: prediction_task_id
          required: true
          schema:
            $ref: '#/components/schemas/PredictionTaskId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionTask'
  /prediction/{database}/{prediction_task_id}/log:
    get:
      parameters:
        - in: path
          name: database
          required: true
          schema:
            $ref: '#/components/schemas/DatabaseId'
        - in: path
          name: prediction_task_id
          required: true
          schema:
            $ref: '#/components/schemas/PredictionTaskId'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
  /prediction/{database}/{prediction_task_id}/public/prediction.json:
    get:
      parameters:
        - in: path
          name: database
          required: true
          schema:
            $ref: '#/components/schemas/DatabaseId'
        - in: path
          name: prediction_task_id
          required: true
          schema:
            $ref: '#/components/schemas/PredictionTaskId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
  /docking/{database}/{prediction_task_id}/tasks:
    get:
      parameters:
        - in: path
          name: database
          required: true
          schema:
            $ref: '#/components/schemas/DatabaseId'
        - in: path
          name: prediction_task_id
          required: true
          schema:
            $ref: '#/components/schemas/PredictionTaskId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockingTaskList'
  /docking/{database}/{prediction_task_id}/{docking_task_hash}/public/result.json:
    get:
      parameters:
        - in: path
          name: database
          required: true
          schema:
            $ref: '#/components/schemas/DatabaseId'
        - in: path
          name: prediction_task_id
          required: true
          schema:
            $ref: '#/components/schemas/PredictionTaskId'
        - in: path
          name: docking_task_hash
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockingResponse'

components:
  schemas:
    DatabaseId:
      type : string
    PredictionTaskId:
      type : string
    PredictionTask:
      type: object
      properties:
        id:
          type: string
        database:
          type: string
        created:
          type: string
          format: date-time
        lastChange:
          type: string
          format: date-time
        status:
          type: string
          enum: ['queued', 'running', 'failed', 'successful']
        metadata:
          type: object
    Prediction:
      type: object
      properties:
        pockets:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              rank:
                type: number
              score:
                type: number
              probability:
                type: number
              center:
                type: array
                items:
                  type: number
              residues:
                type: array
                items:
                  type: string
              surface:
                type: array
                items:
                  type: string
        structure:
          type: object
          properties:
            sequence:
              type: array
              items:
                type: string
            scores:
              type: array
              items:
                type: number
            indices:
              type: array
              items:
                type: string
            binding:
              type: array
              description: Indices of know binding sites on the complex.
              items:
                type: number
            regions:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  start:
                    type: number
                  end:
                    type: number
    DockingTaskList:
      type: object
      properties:
        identifier:
          type: string
        tasks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              created:
                type: string
                format: date-time
              lastChange:
                type: string
                format: date-time
              status:
                type: string
                enum: ['queued', 'running', 'failed', 'successful']
              initialData:
                type: object
                properties:
                  hash:
                    type: string
                  pocket:
                    type: string
    DockingResponse:
      type: array
      items:
        type: object
        properties:
          url:
            type: string